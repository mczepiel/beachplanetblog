montageDefine("8d02820","ui/scene-viewer.reel/scene-viewer",{dependencies:["montage","montage/ui/component","runtime/utilities","runtime/scene-helper"],factory:function(e,t){e("montage").Montage;var n=e("montage/ui/component").Component;e("runtime/utilities").Utilities;var i=e("runtime/scene-helper").SceneHelper;t.SceneViewer=n.specialize({scene:{get:function(){return this._scene},set:function(e){e!=this._scene&&(this._scene=e,this.sceneDidChange())}},sceneView:{get:function(){return this.templateObjects?this.templateObjects.sceneView:null}},automaticallyCyclesThroughViewPoints:{value:!0,writable:!0},play:{value:function(){this.sceneView&&this.sceneView.play()}},pause:{value:function(){this.sceneView&&this.sceneView.pause()}},stop:{value:function(){this.sceneView&&this.sceneView.stop()}},_scene:{value:null,writable:!0},constructor:{value:function(){this.super()}},_sceneDidLoad:{value:function(e){e.glTFElement&&this.scene.glTFElement.animationManager&&this.scene.glTFElement.animationManager&&(this.scene.glTFElement.animationManager.delegate=this)}},handleStatusChange:{value:function(e,t,n){if("loaded"===e){this._sceneDidLoad(n);var i=this;setTimeout(function(){i.scene.removeOwnPropertyChangeListener("status",i)},1)}}},sceneDidChange:{value:function(){this.scene&&(this.scene.isLoaded()?this._sceneDidLoad(this.scene):this.scene.addOwnPropertyChangeListener("status",this)),this.sceneView&&(this.sceneView.scene=this.scene)}},sceneTimeWillChange:{value:function(){}},sceneTimeDidChange:{value:function(){if(null!=this.scene&&null!=this.scene.glTFElement){var e=this.scene.glTFElement.endTime;if(-1!==e&&null!=this.sceneView){var t=this.scene.glTFElement.animationManager;if(t.sceneTime/1e3>e&&1==this.automaticallyCyclesThroughViewPoints){var n=this.sceneView._viewPointIndex,r=i.getViewPoints(this.scene);if(r.length>0){var a,s=0;do t.sceneTime=0,s++,n=++n%r.length,a=r[n];while(r.length>s&&0==t.nodeHasAnimatedAncestor(a.glTFElement));this.sceneView.viewPoint=a}}}}}},templateDidLoad:{value:function(){this.sceneDidChange(),this.needsDraw=!0,this.sceneView.needsDraw=!0}},enterDocument:{value:function(){window.addEventListener("resize",this,!0)}},exitDocument:{value:function(){window.removeEventListener("resize",this,!0)}},draw:{value:function(){}},willDraw:{value:function(){this.sceneView&&(this.sceneView.needsDraw=!0)}},captureResize:{value:function(){this.needsDraw=!0;var e=this.element.offsetWidth,t=this.element.offsetHeight;this.sceneView.width=e,this.sceneView.height=t,this.sceneView.needsDraw=!0}}})}});