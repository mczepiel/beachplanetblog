montageDefine("bfd16e7","ui/flow.reel/flow-bezier-spline",{dependencies:["montage"],factory:function(e,t){var n=e("montage").Montage,i=t.FlowBezierSpline=n.specialize({constructor:{value:function i(){this._knots=[],this._densities=[]}},knots:{get:function(){return this._knots},set:function(e){this._knots=e}},previousHandlers:{get:function(){return this._previousHandlers||(this._previousHandlers=[]),this._previousHandlers},set:function(e){this._previousHandlers=e}},nextHandlers:{get:function(){return this._nextHandlers||(this._nextHandlers=[]),this._nextHandlers},set:function(e){this._nextHandlers=e}},densities:{get:function(){return this._densities},set:function(e){this._densities=e,this._densitiesLength=this._densities.length,this._maxTime=null}},_parameters:{value:{}},parameters:{get:function(){return this._parameters||(this._parameters={}),this._parameters},set:function(e){this._parameters=e,this._parametersLength=this._parameters.length}},_maxTime:{enumerable:!1,value:null},computeMaxTime:{value:function(){return this._computeDensitySummation(),this._maxTime=this._densitySummation.length?this._densitySummation[this._densitySummation.length-1]:0,this._maxTime}},_densitySummation:{enumerable:!1,value:null},_computeDensitySummation:{enumerable:!1,value:function(){var e,t=this.densities,n=t.length-1,i=0;for(this._densitySummation=[],e=0;n>e;e++)i+=(t[e]+t[e+1])/2,this._densitySummation[e]=i;this._maxTime=null}},_convertSplineTimeToBezierIndexTime:{enumerable:!1,value:function(e){if(0>e)return null;if(null===this._maxTime&&this.computeMaxTime(),e>=this._maxTime)return null;for(var t,n,i,r,a,o=this._densitySummation,s=o.length,l=s-1,u=s>>1;u;)l-u>=0&&o[l-u]>e?l-=u:u>>=1;return t=e-(l?o[l-1]:0),i=this._densities[l],r=this._densities[l+1],a=i-r,n=-1e-10>a||a>1e-10?(i-Math.sqrt(i*i+2*(r-i)*t))/a:t/i,[l,n]}},getPositionAtIndexTime:{value:function(e){var t=e[0],n=e[1],i=this._knots[t],r=this._nextHandlers[t],a=this._previousHandlers[t+1],o=this._knots[t+1],s=1-n,l=s*s*s,u=3*s*s*n,c=3*s*n*n,h=n*n*n;return[i[0]*l+r[0]*u+a[0]*c+o[0]*h,i[1]*l+r[1]*u+a[1]*c+o[1]*h,i[2]*l+r[2]*u+a[2]*c+o[2]*h]}},getRotationAtIndexTime:{value:function(e){var t,n,i,r=e[0],a=e[1],o=1-a,s=this._parameters;return t=s.rotateX!==void 0?s.rotateX.data[r]*o+s.rotateX.data[r+1]*a:0,n=s.rotateY!==void 0?s.rotateY.data[r]*o+s.rotateY.data[r+1]*a:0,i=s.rotateZ!==void 0?s.rotateZ.data[r]*o+s.rotateZ.data[r+1]*a:0,[t,n,i]}},getStyleAtIndexTime:{value:function(e){var t,n,i=e[0],r=e[1],a=this._parameters,o=1-r,s="";for(parameterKeys=Object.keys(a),parameterKeyCount=parameterKeys.length,t=0;parameterKeyCount>t;t++)n=parameterKeys[t],jParameter=a[n],jParameterData=jParameter.data,"rotateX"!==n&&"rotateY"!==n&&"rotateZ"!==n&&jParameterData[i]!==void 0&&jParameterData[i+1]!==void 0&&(s+=n+":"+1e-5*(1e5*(jParameterData[i]*o+jParameterData[i+1]*r)>>0)+jParameter.units+";");return s}},transformVectorArray:{value:function(e,t){var n,i,r=e.length,a=[];for(i=0;r>i;i++)n=e[i],n&&(a[i]=[n[0]*t[0]+n[1]*t[4]+n[2]*t[8]+t[12],n[0]*t[1]+n[1]*t[5]+n[2]*t[9]+t[13],n[0]*t[2]+n[1]*t[6]+n[2]*t[10]+t[14]]);return a}},transform:{value:function(e){var t=new i;return t._densities=this._densities,t._densitySummation=this._densitySummation,t._knots=this.transformVectorArray(this.knots,e),t._previousHandlers=this.transformVectorArray(this.previousHandlers,e),t._nextHandlers=this.transformVectorArray(this.nextHandlers,e),t}},deCasteljau:{value:function(e,t,n,i,r){var a=1-r,o=a*e[0]+r*t[0],s=a*t[0]+r*n[0],l=a*n[0]+r*i[0],u=a*o+r*s,c=a*s+r*l,h=a*u+r*c,d=a*e[1]+r*t[1],p=a*t[1]+r*n[1],f=a*n[1]+r*i[1],m=a*d+r*p,v=a*p+r*f,g=a*m+r*v,_=a*e[2]+r*t[2],b=a*t[2]+r*n[2],y=a*n[2]+r*i[2],w=a*_+r*b,E=a*b+r*y,C=a*w+r*E;return[[e,[o,d,_],[u,m,w],[h,g,C]],[[h,g,C],[c,v,E],[l,f,y],i]]}},cubic:{enumerable:!1,value:function(e,t,n,i,r){return((e*r+t)*r+n)*r+i}},cubeRoot:{enumerable:!1,value:function(e){return e>0?Math.pow(e,1/3):-Math.pow(-e,1/3)}},cubicRealRoots:{enumerable:!1,value:function(e,t,n,i){var r=1e-100,a=Math;if(-r>e||e>r){var o=1/e,s=t*o,l=n*o,u=(3*l-s*s)*(1/9),c=(4.5*s*l-13.5*i*o-s*s*s)*(1/27),h=u*u*u+c*c;if(h>r){var d=a.sqrt(h);return[this.cubeRoot(c+d)+this.cubeRoot(c-d)+s*(-1/3)]}if(h>-r){if(-r>c||c>r){var p=this.cubeRoot(c),f=2*p+s*(-1/3),m=s*(-1/3)-p;return m>f?[f,m]:[m,f]}return[s*(-1/3)]}var v=a.acos(c/a.sqrt(-u*u*u))*(1/3),g=a.sqrt(-u),_=1.7320508075688772*g*a.sin(v),b=s*(-1/3);return g*=a.cos(v),[b-g-_,b-g+_,b+2*g]}if(-r>t||t>r){var y=n*n-4*t*i;return y>=0?(y=a.sqrt(y),[(-n-y)/(2*t),(y-n)/(2*t)]):[]}return-r>n||n>r?[-i/n]:[]}},_halfPI:{enumerable:!1,value:.5*Math.PI},reflectionMatrix:{enumerable:!1,value:function(e,t,n,i){var r=Math,a=this._halfPI-r.atan2(t,e),o=r.sin(a),s=r.cos(a),l=this._halfPI-r.atan2(n,e*o+t*s),u=r.sin(l);return i[0]=u*o,i[1]=s*u,i[2]=r.cos(l),i}},reflectedY:{enumerable:!1,value:function(e,t,n,i){return e*i[0]+t*i[1]+n*i[2]}},directedPlaneBezierIntersection:{enumerable:!1,value:function(e,t,n,i,r,a,o,s,l){for(var u,c,h=this.reflectionMatrix(i[0],i[1],i[2],l),d=this.reflectedY(r[0]-e,r[1]-t,r[2]-n,h),p=this.reflectedY(a[0]-e,a[1]-t,a[2]-n,h),f=this.reflectedY(o[0]-e,o[1]-t,o[2]-n,h),m=this.reflectedY(s[0]-e,s[1]-t,s[2]-n,h),v=3*(p-f)+m-d,g=3*(d+f)-6*p,_=3*(p-d),b=this.cubicRealRoots(v,g,_,d),y=0,w=0,E=[];b.length>w&&0>=b[w];)w++;for(;b.length>w&&1>b[w];)u=y,y=b[w],c=.5*(u+y),this.cubic(v,g,_,d,c)>=0&&E.push([u,y]),w++;return c=.5*(y+1),this.cubic(v,g,_,d,c)>=0&&E.push([y,1]),E}}})}});