montageDefine("bfd16e7","core/meta/blueprint-reference",{dependencies:["montage","core/promise","core/meta/blueprint","core/meta/binder","core/meta/remote-reference","core/meta/binder-reference","core/logger"],factory:function(e,t){"use strict";e("montage").Montage;var n=e("core/promise").Promise,i=e("core/meta/blueprint"),r=e("core/meta/binder"),a=e("core/meta/remote-reference").RemoteReference,s=e("core/meta/binder-reference").BinderReference;e("core/logger").logger("blueprint"),t.BlueprintReference=a.specialize({constructor:{value:function(){this.super()}},identifier:{get:function(){return this._reference||(this._reference=this.referenceFromValue(this._value)),["blueprint",(this._reference.blueprintName||"unnamed").toLowerCase(),"reference"].join("_")}},valueFromReference:{value:function(t){t.blueprintName;var a=t.blueprintModule;t.prototypeName,t.moduleId;var o=t.binderReference,l=n.resolve(r.Binder.manager.defaultBinder);return o&&(l=s.valueFromReference(o,e)),l.then(function(t){return t?i.Blueprint.getBlueprintWithModuleId(a.id,a.require).then(function(e){if(e)return t.addBlueprint(e),e;throw Error("Error cannot find Blueprint "+a)}):i.Blueprint.getBlueprintWithModuleId(a,e)})}},referenceFromValue:{value:function(e){var t={};return t.blueprintName=e.name,t.blueprintModule=e.blueprintInstanceModule,e.binder&&!e.binder.isDefault&&(t.binderReference=s.referenceFromValue(e.binder)),t}}})}});